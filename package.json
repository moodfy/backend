{
   "name": "backend",
   "version": "0.0.1",
   "description": "Projeto backend do shrekness",
   "devDependencies": {
      "@babel/core": "^7.16.0",
      "@babel/preset-env": "^7.16.4",
      "@types/cls-hooked": "^4.3.3",
      "@types/compression": "^1.7.2",
      "@types/consolidate": "^0.14.1",
      "@types/cors": "^2.8.12",
      "@types/express": "^4.17.13",
      "@types/express-session": "^1.17.4",
      "@types/mkdirp": "^1.0.2",
      "@types/node": "^8.10.66",
      "@types/passport": "^1.0.7",
      "@types/passport-spotify": "^2.0.1",
      "@types/sequelize": "^4.28.11",
      "@types/spotify-api": "^0.0.11",
      "@types/validator": "^13.7.1",
      "sequelize-cli": "^6.4.1",
      "ts-node": "3.3.0",
      "ts-node-dev": "^1.1.8",
      "typescript": "4.4.4"
   },
   "dependencies": {
      "axios": "^0.23.0",
      "body-parser": "^1.18.1",
      "cls-hooked": "^4.2.2",
      "compression": "^1.7.4",
      "consolidate": "^0.16.0",
      "cookieparser": "^0.1.0",
      "cors": "^2.8.5",
      "dotenv": "^10.0.0",
      "express": "^4.15.4",
      "express-session": "^1.17.2",
      "helmet": "^4.6.0",
      "mkdirp": "^1.0.4",
      "morgan": "^1.10.0",
      "nunjucks": "^3.2.3",
      "passport": "^0.5.0",
      "passport-spotify": "^2.0.0",
      "pg": "^8.7.3",
      "pg-hstore": "^2.3.4",
      "reflect-metadata": "^0.1.10",
      "sequelize": "^6.15.0",
      "winston": "^3.5.1"
   },
   "scripts": {
      "start": "tsnd src/server.ts",
      "build:win": "npm run clean && npm run build-ts && xcopy \"./src/views\" \"./build/views/\" /S",
      "build": "npm run clean && npm run build-ts && cp -R ./src/views ./build",
      "docker:build": "docker build . -t backend",
      "docker:rm": "docker image rm backend",
      "docker:run": "docker run --expose 5432 -p 3000:3000 backend",
      "docker:pg": "docker-compose up",
      "docker:cache": "docker builder prune -a -f",
      "docker:rm-lan": " docker network rm net",
      "docker:lan": "docker network create --driver=bridge net",
      "docker:create": "docker create --name backend --network net",
      "clean": "rimraf build",
      "build-ts": "tsc",
      "migrations": "npx sequelize db:migrate "
   }
}
